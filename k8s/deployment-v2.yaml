---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nkp-cluster-visualizer-config-v2
  namespace: default
  labels:
    app: nkp-cluster-visualizer
    version: v2.0.0
    environment: production
    platform: nutanix
data:
  BIND_PORT: "9090"
  CLUSTER_NAME: "nkp-dev01"
  ENABLE_DRILL_DOWN: "true"
  LOG_LEVEL: "INFO"
  REFRESH_INTERVAL: "30"
  SHOW_RESOURCE_USAGE: "true"
  THEME: "nutanix"
  VERSION: "v2.0.0"
  GITHUB_REPO: "https://github.com/nutanixed/nkp-cluster-visualizer.git"

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nkp-cluster-visualizer-sa-v2
  namespace: default
  labels:
    app: nkp-cluster-visualizer
    version: v2.0.0
    environment: production
    platform: nutanix

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nkp-cluster-visualizer-role-v2
  labels:
    app: nkp-cluster-visualizer
    version: v2.0.0
    environment: production
    platform: nutanix
rules:
- apiGroups: [""]
  resources: ["nodes", "pods", "services", "namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["get", "list", "watch", "patch", "update"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["nodes", "pods"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nkp-cluster-visualizer-binding-v2
  labels:
    app: nkp-cluster-visualizer
    version: v2.0.0
    environment: production
    platform: nutanix
subjects:
- kind: ServiceAccount
  name: nkp-cluster-visualizer-sa-v2
  namespace: default
roleRef:
  kind: ClusterRole
  name: nkp-cluster-visualizer-role-v2
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nkp-cluster-visualizer-v2
  namespace: default
  labels:
    app: nkp-cluster-visualizer
    version: v2.0.0
    environment: production
    platform: nutanix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nkp-cluster-visualizer
      version: v2.0.0
  template:
    metadata:
      labels:
        app: nkp-cluster-visualizer
        version: v2.0.0
        environment: production
        platform: nutanix
    spec:
      serviceAccountName: nkp-cluster-visualizer-sa-v2
      initContainers:
      - name: git-clone
        image: alpine/git:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "=== NKP Cluster Visualizer v2.0.0 Initialization ==="
          echo "Repository: ${GITHUB_REPO}"
          echo "Version: ${VERSION}"
          echo "Timestamp: $(date)"
          echo ""
          
          echo "Cloning repository..."
          if [ "${VERSION}" = "main" ] || [ "${VERSION}" = "master" ]; then
            git clone ${GITHUB_REPO} /tmp/repo
          else
            echo "Cloning specific version: ${VERSION}"
            git clone --branch ${VERSION} --single-branch ${GITHUB_REPO} /tmp/repo || {
              echo "Failed to clone version ${VERSION}, falling back to main branch"
              git clone ${GITHUB_REPO} /tmp/repo
            }
          fi
          
          echo "Repository contents:"
          ls -la /tmp/repo/
          
          echo "Copying application files..."
          cp -r /tmp/repo/* /app/ 2>/dev/null || {
            echo "Direct copy failed, trying with find..."
            find /tmp/repo -maxdepth 1 -type f -exec cp {} /app/ \;
            find /tmp/repo -maxdepth 1 -type d ! -path /tmp/repo -exec cp -r {} /app/ \;
          }
          
          echo "Final application structure:"
          ls -la /app/
          
          echo "=== Initialization Complete ==="
        env:
        - name: VERSION
          valueFrom:
            configMapKeyRef:
              name: nkp-cluster-visualizer-config-v2
              key: VERSION
        - name: GITHUB_REPO
          valueFrom:
            configMapKeyRef:
              name: nkp-cluster-visualizer-config-v2
              key: GITHUB_REPO
        volumeMounts:
        - name: app-volume
          mountPath: /app
      containers:
      - name: nkp-cluster-visualizer
        image: python:3.11-slim
        ports:
        - containerPort: 9090
          name: http
        env:
        - name: BIND_PORT
          valueFrom:
            configMapKeyRef:
              name: nkp-cluster-visualizer-config-v2
              key: BIND_PORT
        - name: REFRESH_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: nkp-cluster-visualizer-config-v2
              key: REFRESH_INTERVAL
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: nkp-cluster-visualizer-config-v2
              key: CLUSTER_NAME
        - name: ENABLE_DRILL_DOWN
          valueFrom:
            configMapKeyRef:
              name: nkp-cluster-visualizer-config-v2
              key: ENABLE_DRILL_DOWN
        - name: SHOW_RESOURCE_USAGE
          valueFrom:
            configMapKeyRef:
              name: nkp-cluster-visualizer-config-v2
              key: SHOW_RESOURCE_USAGE
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: nkp-cluster-visualizer-config-v2
              key: LOG_LEVEL
        - name: THEME
          valueFrom:
            configMapKeyRef:
              name: nkp-cluster-visualizer-config-v2
              key: THEME
        - name: VERSION
          valueFrom:
            configMapKeyRef:
              name: nkp-cluster-visualizer-config-v2
              key: VERSION
        command: ["/bin/bash", "-c"]
        args:
        - |
          cd /app
          echo "=== NKP Cluster Visualizer v2.0.0 Startup ==="
          echo "Working directory: $(pwd)"
          echo "Python version: $(python3 --version)"
          echo "Application version: ${VERSION}"
          echo ""
          
          echo "Installing dependencies..."
          if [ -f "requirements.txt" ]; then
            pip install --no-cache-dir -r requirements.txt
            echo "Dependencies installed successfully"
          else
            echo "No requirements.txt found, installing basic dependencies..."
            pip install --no-cache-dir flask kubernetes
          fi
          
          echo ""
          echo "Application files:"
          ls -la
          
          echo ""
          echo "Starting NKP Cluster Visualizer v2.0.0..."
          if [ -f "cluster_api.py" ]; then
            python3 cluster_api.py
          else
            echo "cluster_api.py not found, listing available files:"
            find . -name "*.py" -type f
            exit 1
          fi
        volumeMounts:
        - name: app-volume
          mountPath: /app
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /api/health
            port: 9090
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/health
            port: 9090
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 12
      volumes:
      - name: app-volume
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: nkp-cluster-visualizer-service-v2
  namespace: default
  labels:
    app: nkp-cluster-visualizer
    version: v2.0.0
    environment: production
    platform: nutanix
spec:
  selector:
    app: nkp-cluster-visualizer
    version: v2.0.0
  ports:
  - name: http
    port: 80
    targetPort: 9090
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: nkp-cluster-visualizer-loadbalancer-v2
  namespace: default
  labels:
    app: nkp-cluster-visualizer
    version: v2.0.0
    environment: production
    platform: nutanix
spec:
  selector:
    app: nkp-cluster-visualizer
    version: v2.0.0
  ports:
  - name: http
    port: 80
    targetPort: 9090
    protocol: TCP
  type: LoadBalancer